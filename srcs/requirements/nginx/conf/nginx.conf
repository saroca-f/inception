user www-data;
#	This setence is not necesary, buy is a good practice.
#	REMINDER: User accounts are in /etc/passwd
#	Nginx has a master process that controls the configuration and overall state of the server.
#	The worker processes are responsible for handling network connections, such as users' HTTP requests.
#	These processes do most of the work.
worker_processes auto;
#	This directive controls the number of worker processes that Nginx starts.
#	Each worker process is responsible for handling the server's connections, such as HTTP requests,\
#		TCP connections, or HTTPS traffic.
#	-worker_processes:
#		It is the directive that sets how many worker processes should be started.
#		Each process is independent and can handle multiple connections simultaneously\
#			(thanks to Nginx's asynchronous model).
#	-auto:
#		The "auto" keyword tells Nginx to automatically determine the optimal number of\
#			worker processes based on the number of available CPU cores on the system.
#		This ensures that Nginx makes the most of the hardware without you having to\
#			manually configure this value.
pid /run/nginx.pid;
#	This directive tells Nginx the location of the file where the PID (Process ID) of the Nginx\
#		master process will be stored. The PID is a unique number assigned to each running process\
#		in an operating system.
#	What is the PID?
#		The PID (Process ID) is a unique identifier assigned to each process running on the operating\
#		system. When you start a service, like Nginx, the operating system assigns a PID to that\
#		process in order to manage it (for example, to stop it, restart it, etc.).
#		REMINDER: Nginx master process: It is the main process that starts the worker processes.\
#			This master process supervises and manages all the secondary processes that handle user requests.
#	The PID file allows for efficiently restarting, stopping, and managing Nginx.
#	It is a good practice to specify the location of the PID file to ensure proper process management.
include /etc/nginx/modules-enabled/*.conf;
#	The "include" directive in Nginx tells the server to import or load additional configurations\
#	from external files. In this case, Nginx is importing configuration files for specific modules\
#	located in the /etc/nginx/modules-enabled/ directory.
#  	-include:
#  		This directive is used to include configurations from other files into Nginx's main\
#  		configuration file (usually, nginx.conf). It allows for modularizing the configuration,\
#		making it easier to manage and maintain.
#	-/etc/nginx/modules-enabled/*.conf:
#		-> /etc/nginx/modules-enabled/
#			is a directory where the configuration files for enabled Nginx modules are stored.
#		-> *.conf
#			is a way to search for and load all files with the .conf extension in that directory.
#	Therefore, this line tells Nginx to load all configuration files within\
#	/etc/nginx/modules-enabled/ that end with .conf. These files typically contain additional\
#	configurations to enable specific Nginx modules.
error_log /var/log/nginx/error.log warn;
#	The error_log directive tells Nginx where to store the error messages generated by the server\
#	and what level of detail (log level) to use for those messages. It is an essential tool for\
#	debugging issues, monitoring the server, and analyzing failures.

events 
{
	worker_connections 1024;
}
#	The events section in Nginx configuration controls how the server handles network connections.
#	It is essential for optimizing server performance, as it allows you to adjust the number of\
#	simultaneous connections that each worker process can handle.
#	events:
#		-It is a configuration block where you define parameters related to connection events, such as\
#		the number of concurrent connections and the I/O model that Nginx should use.
#		-Events are the actions that occur when clients interact with the server, such as opening or\
#		closing a connection.
#	worker_connections 1024;
#		-Defines the maximum number of simultaneous connections that each worker process can handle.
#		-In this case, each worker can handle up to 1024 active connections at the same time.
#		-This includes HTTP/HTTPS connections or even proxy connections if Nginx is configured as a reverse proxy.

http
#	This is the main block where aspects related to the server's HTTP and HTTPS requests are configured.
#	Within this block, multiple servers can be defined, each with specific configurations.
{
	server 
	{
		listen 443 ssl;
		ssl_protocols TLSv1.2 TLSv1.3;
		ssl_certificate /etc/nginx/ssl/inception.crt;
		ssl_certificate_key /etc/nginx/ssl/inception.key;
		root/var/www/html;
		index index.php index.html index.htm;
		server_name saroca-f.42.fr;
		location / 
		{
			try_files $uri $uri/ =404;
		}
		location ~ \.php$ 
		{
			include snippets/fastcgi-php.conf;
			fastcgi_pass wordpress:9000;
		}
	}
}